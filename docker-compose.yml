version: '2'

services:
  portainer:
    image: portainer/portainer
    container_name: "portainer"
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: "rabbitmq"
    networks:
       microservices_net:
         ipv4_address: 192.168.1.100
    ports:
        - "15672:15672"
        - "5672:5672"

  slack_outbound:
    build: ./workers/slack_outbound/
    command: "npm run start"
    container_name: "slack_outbound"
    restart: always
    volumes:
      - ./workers/slack_outbound:/usr/app
    networks:
       - microservices_net
    depends_on:
      - rabbitmq
    ports:
      - "10001:10001"

  slack_inbound:
    build: ./workers/slack_inbound/
    command: "npm run start"
    container_name: "slack_inbound"
    restart: always
    env_file:
        - ./workers/slack_inbound/config/current.env
    volumes:
      - ./workers/slack_inbound:/usr/app
    networks:
       - microservices_net
    depends_on:
      - rabbitmq
    ports:
      - "10002:10002"

#  receiver:
#    build: ./workers/receiver/
#    container_name: "receiver"
#    command: "npm run start"
#    restart: always
#    volumes:
#          - ./workers/receiver:/usr/app
#    networks:
#       - microservices_net
#    depends_on:
#      - rabbitmq
#    ports:
#      - "10002:10002"

volumes:
  portainer_data:


networks:
  microservices_net:
    ipam:
      driver: default
      config:
        - subnet: 192.168.1.0/24
